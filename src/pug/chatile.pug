extends header.pug

include mixins.pug

block title
  | Chatile

block project
  h3
    | Chatile

  p.big.nomargin.
    Ещё не существует ни одного консольного чата, развитого
    так же, как любой мессенджер с графическим интерфейсом. Такое приложение было бы удобно
    использовать администраторам по локальной сети, чтобы не пользоваться
    устаревшими почтовыми утилитами.
  p.big.
    Встречайте, Chatile!

  mspace
  img.rounded.shadowed(src="/static/img/chatile/1.png")
  mspace

  p.
    Чатиль имеет клиент-серверную архитектуру с базой данных и работает
    на чистых сокетах. Чтобы стандартизировать структуру пакетов, мы
    разработали <i>Mail Transfer Protocol</i> специально для проекта. Вот как
    выглядят его основные сообщения:

  a(href="#skip").big
    | Чё-то сложно, давайте&nbsp;дальше

  lspace

  div.protocol-block
    div#protocol-code
      div#protocol-inner-code
        pre.
          {
            'header': 'register',
            'body': {
              'name': &lt;str&gt;,
              'login': &lt;str&gt;,
              'password': &lt;str&gt;
            }
          }

    div#protocol-menu
      span.active#packet-register(onclick="set_packet_description(this)")
        | Регистрация
      span#packet-login(onclick="set_packet_description(this)")
        | Логин
      span#packet-send-message(onclick="set_packet_description(this)")
        | Отправка сообщения
      span#packet-auth(onclick="set_packet_description(this)")
        | Успешная авторизация
      span#packet-message(onclick="set_packet_description(this)")
        | Доставка сообщения
      span#packet-get-messages(onclick="set_packet_description(this)")
        | История сообщений
      span#packet-error(onclick="set_packet_description(this)")
        | Ошибка
      span#packet-ok(onclick="set_packet_description(this)")
        | ОК

  mspace

  p#skip.
    Низкий уровень передачи пакетов снижает требования к
    сети, а отсутствие графического интерфейса — к железу сервера.
  p.
    База данных нужна, для того чтобы можно было как вести переписку в реальном времени,
    так и накапливать сообщения от отправителя. Когда получатель появится в сети,
    он увидит все сообщения, сохранённые в базе. Большинство
    существующих чатов умеют соединять клиенты друг с другом
    только одновременно.

  mspace
  img.rounded.shadowed(src="/static/img/chatile/2.png")
  mspace

  p.
    Чтобы начать общение, нужно зарегистрироваться. После этого
    можно связаться с любым другим пользователем по уникальному логину.

  mspace
  img.rounded.shadowed(src="/static/img/chatile/3.png")
  mspace

  p.
    Войти в систему по логину и паролю можно всего один раз, и
    после этого клиент получает токен на час, который позволяет
    совершать любые действия без повторной аутентификации.

  mspace
  img.rounded.shadowed(src="/static/img/chatile/4.png")
  mspace

  p.
    Меню защищает пользователя от неправильных действий.

  mspace
  img.rounded.shadowed(src="/static/img/chatile/5.png")
  mspace

  p.
    Кейс многопользовательского чата разработан компанией СберТех
    для хакатона <a href="https://vk.com/devhack2020">DevHack 2020</a> в Ростове-на-Дону. Чатиль стал
    лучшим решением этой задачи.
  p.
    Сейчас разрабатывается новый клиент на Go и расширяется функциональность:
    поддержка статуса онлайна, списка контактов и многопользовательских чатов.
  p.
    Сервер — я, клиент — <a href="https://github.com/stepan-neretin7">Степан</a>, протокол — <a href="https://codeforces.com/profile/Renedyn">Глеб</a>.

  lspace

  .actions
    +action-telegram
    +action-project('district61')

